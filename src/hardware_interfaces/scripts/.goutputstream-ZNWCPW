#!/usr/bin/env python

import roslib; roslib.load_manifest('DelphinROSv2')
import rospy
import numpy
import smach
import smach_ros
import time


class windtunnel(smach.State):
    def __init__(self, lib):
            smach.State.__init__(self, outcomes=['succeeded','aborted','preempted'])
            self.__controller = lib
            
    def execute(self, userdata):
            
            ####################################################################
            ### TAIL SECTION ###################################################
            ####################################################################

            
            self.__controller.setControlSurfaceAngle(0,0,0,0)
            time.sleep(2)
            
            self.__controller.setRearProp(20)
            time.sleep(60)
            print "PROP ON"
            
            time_zero=time.time()
	    counter=0.0
            rpm=0
            while not rospy.is_shutdown():
	    
	    	if (time.time()-time_zero)<30:
	    		rpm=rpm+self.__controller.getPropRPM()
			counter=counter+1.0
		
            	else:
                	rpm=rpm/counter
			str="RPM= %s" %rpm
			print str 
                	rospy.loginfo(str)
                	self.__controller.setRearProp(0)
			time.sleep(10)
            		return 'succeeded'
                
            #return 'preempted'

            #return 'aborted'  
            
