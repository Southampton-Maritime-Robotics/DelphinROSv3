#!/usr/bin/python
"""
Analyse raw data from mechanical scanning sonar

Current features:
- detect the nearest obstacle/wall in the beam

######################################################
# TODO
- get rid of global variables
- include vehicle state/tf information
- use int array to 
"""

###########
#  VERSION AS OF 19/06/2015
#  Analysis of sonar data 
#  for wall following, obstacle detection etc.

###########

import rospy
import numpy as np
import time
import sys
import signal
import tf
import tf2_ros
import geometry_msgs.msg



from std_msgs.msg import String
from std_msgs.msg import Float32
from hardware_interfaces.msg import sonar_data
from hardware_interfaces.msg import sonar	

from hardware_interfaces import sonar_analyse

################################################################

def get_sonar(msgData):
    """
    currently the sonar is only read and an analysis of this ping is published, no sonar data is kept
    if needed, the SonarEvaluate object needs adapting
    :param msgData: sonar ping in string format
    """
    result = sonar.detect_obstacle(sonar_analyse.SonarPing(msgData))
    pub.publish(transBearing=result[0], pitch=0, TargetRange=result[1], meanIntinsity=result[2])  # TODO get rid of pitch entry in this message

    [sonartf.transform.rotation.x,
     sonartf.transform.rotation.y,
     sonartf.transform.rotation.z,
     sonartf.transform.rotation.w] = tf.transformations.quaternion_about_axis(np.deg2rad(result[0]), [sonar_axis.x,
                                                                                              sonar_axis.y,
                                                                                              sonar_axis.z])

    sonartf.header.stamp = rospy.Time.now()
    sonartf.header.frame_id = "delphin2"
    sonartf.child_frame_id = "mechScanningSonar"
    #transform.rotation.w] = tf.transformations.quaternion_from_euler(0, np.deg2rad(result[0]), 0)
    br.sendTransform(sonartf)


################################################################
################################################################
if __name__ == '__main__':

    global pub
    global pitch

    rospy.init_node('sonar_detect')
    # Uncomment to run this node in debug mode:
    #rospy.init_node('sonar_detect', log_level=rospy.DEBUG)
    pub = rospy.Publisher('sonar_processed', sonar_data)
    br = tf2_ros.TransformBroadcaster()
    sonar_axis = geometry_msgs.msg.Vector3()
    [sonar_axis.x, sonar_axis.y, sonar_axis.z] = rospy.get_param("/sonar/rotation/Axis")
    sonartf = geometry_msgs.msg.TransformStamped()
    sonartf.transform.translation.x = rospy.get_param("/sonar/XPosition")
    sonartf.transform.translation.y = rospy.get_param("/sonar/YPosition")
    sonartf.transform.translation.z = rospy.get_param("/sonar/ZPosition")
    sonar = sonar_analyse.SonarEvaluate()
    rospy.Subscriber('sonar_output', String, get_sonar)
    rospy.spin()

   
